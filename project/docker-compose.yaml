version: '3'

services:

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1
    container_name: BrokerApp

  authentication-service:
    build:
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    ports:
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    env_file:
      - ./authentication-service.env
    depends_on:
      - postgres
    container_name: AuthApp

    
  postgres:
    image: "postgres:12.12"
    restart: always
    env_file:
      - ./postgres.env
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/
    container_name: PostgresDB

  mongo:
    image: "mongo:4.2.16-bionic"
    ports:
      - "27017:27017"
    env_file:
      - ./logger-service.env
    volumes:
     - ./db-data/mongo/:/data/db
    container_name: MongoDB

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    env_file:
      - ./logger-service.env
    deploy:
      mode: replicated 
      replicas: 1
    container_name: LoggerApp

  mailhog:
    image: "mailhog/mailhog:v1.0.1"
    ports:
      - "1025:1025"
      - "8025:8025"

  mail-service:
    build:
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always 
    env_file: 
      - ./mail-service.env
    deploy:
      mode: replicated 
      replicas: 1
    container_name: MailService
    
    
    
